version: '3'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./init-superset-db.sql:/docker-entrypoint-initdb.d/init-superset-db.sql


  airflow-webserver:
    image: apache/airflow:2.7.0
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__WEBSERVER__WORKERS: 1
      AIRFLOW__WEBSERVER__SECRET_KEY: my_super_secret_key_123
    volumes:
      - ./dags:/opt/airflow/dags
      - ../spark_jobs:/opt/airflow/spark_jobs
      - ../scripts:/opt/airflow/scripts
      - ../data:/opt/airflow/data  # Add this line to share data
    ports:
      - "8080:8080"
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.7.0
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: my_super_secret_key_123
    volumes:
      - ./dags:/opt/airflow/dags
      - ../spark_jobs:/opt/airflow/spark_jobs
      - ../scripts:/opt/airflow/scripts
      - ../data:/opt/airflow/data  # Add this line to share data
    command: scheduler

  spark:
    image: bitnami/spark:latest
    container_name: spark
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8081:8080"
    volumes:
      - ../spark_jobs:/opt/spark-apps
      - ../data:/opt/data  # Add this line to share data

  superset-init:
    image: apache/superset:latest
    container_name: superset_init
    depends_on:
      - postgres # Ensure postgres is up
    environment:
      - SUPERSET_CONFIG_PATH=/app/superset_config.py
    volumes:
      # Only mount what's necessary for initialization
      - ./superset_config.py:/app/superset_config.py
    # This command runs once to set up the DB and create admin
    command: >
      bash -c "
      echo 'Running Superset initialization...' &&
      pip install sqlalchemy-utils psycopg2-binary &&
      superset db upgrade &&
      superset fab create-admin --username admin --firstname Admin --lastname User --email admin@example.com --password admin &&
      superset init &&
      echo 'Superset initialization complete.'
      "
    # Set a restart policy to 'no' so it doesn't keep running after success/failure
    restart: "no"

  # NEW: Add Superset service
  superset:
        image: apache/superset:latest
        container_name: superset
        depends_on:
          - postgres
          - superset-init # IMPORTANT: Ensure initialization is complete before starting webserver
        environment:
          - SUPERSET_CONFIG_PATH=/app/superset_config.py
        ports:
          - "8088:8088"
        volumes:
          - ../retail_oltp.db:/app/retail_oltp.db:ro
          - ./superset_config.py:/app/superset_config.py
          - ../data:/app/data
        # MODIFIED COMMAND: Add pip install here for the main webserver
        command: >
          bash -c "
          echo 'Installing psycopg2-binary in main superset container...' &&
          pip install sqlalchemy-utils psycopg2-binary &&
          echo 'Starting Superset webserver...' &&
          superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger
          "
volumes:
  postgres-db-volume: